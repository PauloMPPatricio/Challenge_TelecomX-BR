
Resumo Técnico – Etapa de Extração de Dados do Projeto TelecomXBR (com Códigos)

Nesta etapa inicial do projeto, realizamos a extração e estruturação dos dados da base TelecomX, com foco na preparação para análises futuras relacionadas à evasão de clientes (churn). Os dados foram acessados através de um endpoint remoto em formato JSON:

> https://raw.githubusercontent.com/alura-cursos/challenge2-data-science/refs/heads/main/TelecomX_Data.json

Utilizamos um notebook do Google Colab com as bibliotecas pandas e requests, dado o seu suporte interativo e eficiente para ciência de dados.

1. Importação de bibliotecas

```python
import pandas as pd
import requests
```

2. Requisição de dados da API

Realizamos a requisição HTTP para obter os dados e verificamos o status da resposta:

```python
url = 'https://raw.githubusercontent.com/alura-cursos/challenge2-data-science/refs/heads/main/TelecomX_Data.json'
response = requests.get(url)

if response.status_code == 200:
    print("✅ Dados carregados com sucesso!")
else:
    print(f"❌ Falha ao carregar os dados. Código de status: {response.status_code}")
```

3. Conversão da resposta em JSON para DataFrame

```python
dados_json = response.json()
df = pd.DataFrame(dados_json)
df.head()  # Visualização inicial
```

4. Expansão das colunas aninhadas

```python
df_exp = df.copy()

# Expandindo coluna 'customer'
customer_df = pd.json_normalize(df_exp['customer'])
df_exp = pd.concat([df_exp.drop(columns=['customer']), customer_df], axis=1)

# Expandindo coluna 'phone'
phone_df = pd.json_normalize(df_exp['phone'])
df_exp = pd.concat([df_exp.drop(columns=['phone']), phone_df], axis=1)

# Expandindo coluna 'internet'
internet_df = pd.json_normalize(df_exp['internet'])
df_exp = pd.concat([df_exp.drop(columns=['internet']), internet_df], axis=1)

# Expandindo coluna 'account'
account_df = pd.json_normalize(df_exp['account'])
df_exp = pd.concat([df_exp.drop(columns=['account']), account_df], axis=1)

df_exp.head()  # Verificação do resultado final
```

5. Inspeção da estrutura final dos dados

```python
df_exp.info()
```

Conclusões da Etapa

- O DataFrame final contém 7267 registros e 21 colunas.
- Todas as colunas estão completas, sem valores nulos.
- A maioria das colunas está como object, mas duas (tenure e SeniorCitizen) são int64 e uma (Charges.Monthly) é float64.
- Charges.Total está como object, indicando a necessidade de conversão para float nas próximas etapas.
- Ainda não salvamos os dados em CSV, pois a estrutura ainda passará por ajustes adicionais.

Finalizamos aqui a etapa de extração, com os dados devidamente carregados, expandidos e prontos para as etapas seguintes do pipeline de dados.
